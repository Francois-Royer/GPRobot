plugins {
    id "java"
    id "java-library-distribution"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

compileJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

def robotcode_home = org.gradle.internal.os.OperatingSystem.current().isWindows() ? 'c:/robocode' : "$System.env.HOME/robocode"

repositories {
    mavenCentral()
    maven {
        url "https://maven.icm.edu.pl/artifactory/repo/"
    }
}

dependencies {
    implementation 'com.esotericsoftware:kryo:5.3.0'
    implementation 'net.sf.robocode:robocode.api:1.9.4.7'
    shadow 'com.esotericsoftware:kryo:5.3.0'
}

project.configurations.implementation.setCanBeResolved(true)

tasks.withType(JavaCompile) {
    options.deprecation = false
}

jar {
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes 'Main-Class': 'gprobot.RunGP',
                'Class-Path': configurations.implementation.collect { "lib/$it.name" }.join(' ')
    }
    dependsOn ('dependencies')
}

shadowJar {
    manifest {
        inheritFrom project.tasks.jar.manifest
    }
    configurations = [project.configurations.shadow]
    dependsOn ('jar')
}

task copyGPBase(type: Copy) {
    from 'src/main/java'
    from 'build/classes/java/main'
    include '**/tankbase/**/*.*'
    include '**/net/sf/javaml/core/**/*.*'
    into "$robotcode_home/robots"
    dependsOn(':compileJava')
}

task copyLib(type: Copy) {
    from 'build/libs'
    include 'gprobot-all.jar'
    into "$robotcode_home/libs"
    dependsOn ('shadowJar', 'copyGPBase')
}

task runGPBase(type: Exec) {
    workingDir "$robotcode_home"
    commandLine 'java', '-Xmx512M', '-cp', 'libs/*', '-XX:+IgnoreUnrecognizedVMOptions', '--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED', '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED', '--add-opens=java.desktop/javax.swing.text=ALL-UNNAMED', '--add-opens=java.desktop/sun.awt=ALL-UNNAMED', 'robocode.Robocode', '-battle', 'battles/GPBaseSample.battle'
    dependsOn 'copyGPBase'
}

task runGP(type: Exec) {
    commandLine 'java',  '-cp', "$robotcode_home/libs/*", 'gprobot.RunGP'
    dependsOn 'copyLib'
}
